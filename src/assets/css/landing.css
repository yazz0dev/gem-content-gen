/* src/assets/css/landing.css */

:root {
  --primary-color: #4158D0;
  --secondary-color: #C850C0;
  --accent-color: #FFCC70;
  --base-padding: 4rem; /* Using CSS variable for padding */
  --base-radius: 1rem;
}

.landing-hero {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 46.35%, var(--accent-color) 100%);
  min-height: 80vh;
  padding: var(--base-padding) 0; /* Use CSS variable */
  position: relative;
  overflow: hidden;
}

.landing-hero::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* Update with actual path.  Options below: */
  /* Option 1: Relative path (if pattern.svg is in assets/images) */
  background: url('../images/pattern.svg'); 
  /* Option 2: Using import.meta.env.BASE_URL (if pattern.svg is in public) */
  /* background: url("#{import.meta.env.BASE_URL}pattern.svg"); */
  opacity: 0.1;
  z-index: 1;
}

.hero-content {
  position: relative;
  z-index: 2;
  color: white;
  max-width: 800px;
  margin: 0 auto;
  text-align: center;
}

.hero-title {
  font-size: 3.5rem;
  font-weight: 800;
  margin-bottom: 1.5rem;
  background: linear-gradient(to right, #fff, #f0f0f0);
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
  background-clip: text;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
  animation: fadeInUp 1s ease;
}

.hero-description {
  font-size: 1.25rem;
  margin-bottom: 2rem;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.95);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
  animation: fadeInUp 1s ease 0.2s backwards;
}

.cta-group {
  display: flex;
  gap: 1rem;
  justify-content: center;
  animation: fadeInUp 1s ease 0.4s backwards;
}

.cta-button {
  padding: 1rem 2rem;
  border-radius: 50px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.cta-primary {
  background: white;
  color: var(--primary-color); /* Using CSS variable */
}

.cta-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(255, 255, 255, 0.3);
}

.cta-secondary {
  background: rgba(255, 255, 255, 0.1);
  color: white;
  backdrop-filter: blur(10px);
}

.cta-secondary:hover {
  background: rgba(255, 255, 255, 0.2);
}

.feature-section {
  padding: var(--base-padding) 0; /* Use CSS variable */
  background: white;
}

.feature-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
  padding: 2rem;
}

.feature-card {
  padding: 2rem;
  border-radius: var(--base-radius); /* Use CSS variable */
  background: white;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.feature-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
}

@media (max-width: 768px) {
  .hero-title {
    font-size: 2.5rem;
  }

  .hero-description {
    font-size: 1.1rem;
  }

  .cta-group {
    flex-direction: column;
  }

  .landing-hero {
    min-height: 60vh;
    padding: 2rem 0; /* Responsive padding adjustment */
  }

  .feature-section {
    padding: 2rem 0; /* Responsive padding adjustment */
  }
}

/* Add fadeInUp keyframes (or import from another CSS file) */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
